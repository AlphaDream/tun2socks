{"Protocols/TSIPStackDelegate.html#/s:FP9tun2socks17TSIPStackDelegate18didAcceptTCPSocketFCS_11TSTCPSocketT_":{"name":"didAcceptTCPSocket(_:)","abstract":"<p>A new TCP socket is accepted. This means we received a new TCP packet containing SYN signal.</p>","parent_name":"TSIPStackDelegate"},"Protocols/TSTCPSocketDelegate.html#/s:FP9tun2socks19TSTCPSocketDelegate13localDidCloseFCS_11TSTCPSocketT_":{"name":"localDidClose(_:)","abstract":"<p>The socket is closed on tx side (FIN received). We will not read any data.</p>","parent_name":"TSTCPSocketDelegate"},"Protocols/TSTCPSocketDelegate.html#/s:FP9tun2socks19TSTCPSocketDelegate14socketDidResetFCS_11TSTCPSocketT_":{"name":"socketDidReset(_:)","abstract":"<p>The socket is reseted (RST received), it should be released immediately.</p>","parent_name":"TSTCPSocketDelegate"},"Protocols/TSTCPSocketDelegate.html#/s:FP9tun2socks19TSTCPSocketDelegate14socketDidAbortFCS_11TSTCPSocketT_":{"name":"socketDidAbort(_:)","abstract":"<p>The socket is aborted (RST sent), it should be released immediately.</p>","parent_name":"TSTCPSocketDelegate"},"Protocols/TSTCPSocketDelegate.html#/s:FP9tun2socks19TSTCPSocketDelegate14socketDidCloseFCS_11TSTCPSocketT_":{"name":"socketDidClose(_:)","abstract":"<p>The socket is closed. This will only be triggered if the socket is closed actively by calling <code>close()</code>. It should be released immediately.</p>","parent_name":"TSTCPSocketDelegate"},"Protocols/TSTCPSocketDelegate.html#/s:FP9tun2socks19TSTCPSocketDelegate11didReadDataFTV10Foundation4Data4fromCS_11TSTCPSocket_T_":{"name":"didReadData(_:from:)","abstract":"<p>Socket read data from local tx side.</p>","parent_name":"TSTCPSocketDelegate"},"Protocols/TSTCPSocketDelegate.html#/s:FP9tun2socks19TSTCPSocketDelegate12didWriteDataFTSi4fromCS_11TSTCPSocket_T_":{"name":"didWriteData(_:from:)","abstract":"<p>The socket has sent the specific length of data.</p>","parent_name":"TSTCPSocketDelegate"},"Protocols/TSTCPSocketDelegate.html":{"name":"TSTCPSocketDelegate","abstract":"<p>The delegate that developer should implement to handle various TCP events.</p>"},"Protocols/TSIPStackDelegate.html":{"name":"TSIPStackDelegate","abstract":"<p>The delegate that the developer should implement to handle what to do when a new TCP socket is connected.</p>"},"Classes/TSIPStack.html#/s:ZvC9tun2socks9TSIPStack5stackS0_":{"name":"stack","abstract":"<p>The singleton stack instance that developer should use. The <code>init()</code> method is a private method, which means there will never be more than one IP stack running at the same time.</p>","parent_name":"TSIPStack"},"Classes/TSIPStack.html#/s:vC9tun2socks9TSIPStack12processQueueCSo13DispatchQueue":{"name":"processQueue","abstract":"Undocumented","parent_name":"TSIPStack"},"Classes/TSIPStack.html#/s:vC9tun2socks9TSIPStack11outputBlockGSQFTGSaV10Foundation4Data_GSaCSo8NSNumber__T__":{"name":"outputBlock","abstract":"<p>When the IP stack decides to output some IP packets, this block is called.</p>","parent_name":"TSIPStack"},"Classes/TSIPStack.html#/s:vC9tun2socks9TSIPStack8delegateXwGSqPS_17TSIPStackDelegate__":{"name":"delegate","abstract":"<p>The delegate instance.</p>","parent_name":"TSIPStack"},"Classes/TSIPStack.html#/s:FC9tun2socks9TSIPStack12suspendTimerFT_T_":{"name":"suspendTimer()","abstract":"<p>Suspend the timer. The timer should be suspended when the device is going to sleep.</p>","parent_name":"TSIPStack"},"Classes/TSIPStack.html#/s:FC9tun2socks9TSIPStack11resumeTimerFT_T_":{"name":"resumeTimer()","abstract":"<p>Resume the timer when the device is awoke.</p>","parent_name":"TSIPStack"},"Classes/TSIPStack.html#/s:FC9tun2socks9TSIPStack8receivedFT6packetV10Foundation4Data_T_":{"name":"received(packet:)","abstract":"<p>Input an IP packet.</p>","parent_name":"TSIPStack"},"Classes/TSTCPSocket.html#/s:vC9tun2socks11TSTCPSocket13sourceAddressVSC7in_addr":{"name":"sourceAddress","abstract":"<p>The source IPv4 address.</p>","parent_name":"TSTCPSocket"},"Classes/TSTCPSocket.html#/s:vC9tun2socks11TSTCPSocket18destinationAddressVSC7in_addr":{"name":"destinationAddress","abstract":"<p>The destination IPv4 address</p>","parent_name":"TSTCPSocket"},"Classes/TSTCPSocket.html#/s:vC9tun2socks11TSTCPSocket10sourcePortVs6UInt16":{"name":"sourcePort","abstract":"<p>The source port.</p>","parent_name":"TSTCPSocket"},"Classes/TSTCPSocket.html#/s:vC9tun2socks11TSTCPSocket15destinationPortVs6UInt16":{"name":"destinationPort","abstract":"<p>The destination port.</p>","parent_name":"TSTCPSocket"},"Classes/TSTCPSocket.html#/s:vC9tun2socks11TSTCPSocket11isConnectedSb":{"name":"isConnected","abstract":"<p>Whether the socket is connected (we can receive and send data).</p>","parent_name":"TSTCPSocket"},"Classes/TSTCPSocket.html#/s:vC9tun2socks11TSTCPSocket8delegateXwGSqPS_19TSTCPSocketDelegate__":{"name":"delegate","abstract":"<p>The delegate that handles various TCP events.</p>","parent_name":"TSTCPSocket"},"Classes/TSTCPSocket.html#/s:FC9tun2socks11TSTCPSocket9writeDataFV10Foundation4DataT_":{"name":"writeData(_:)","abstract":"<p>Send data to local rx side.</p>","parent_name":"TSTCPSocket"},"Classes/TSTCPSocket.html#/s:FC9tun2socks11TSTCPSocket5closeFT_T_":{"name":"close()","abstract":"<p>Close the socket. The socket should not be read or write again.</p>","parent_name":"TSTCPSocket"},"Classes/TSTCPSocket.html#/s:FC9tun2socks11TSTCPSocket5resetFT_T_":{"name":"reset()","abstract":"<p>Reset the socket. The socket should not be read or write again.</p>","parent_name":"TSTCPSocket"},"Classes/TSTCPSocket.html":{"name":"TSTCPSocket","abstract":"<p>The TCP socket class.</p>"},"Classes/TSIPStack.html":{"name":"TSIPStack","abstract":"<p>This is the IP stack that receives and outputs IP packets.</p>"},"Classes.html":{"name":"Classes","abstract":"The following classes are available globally."},"Protocols.html":{"name":"Protocols","abstract":"The following protocols are available globally."}}